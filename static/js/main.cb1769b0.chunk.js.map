{"version":3,"sources":["images/hearthfull.svg","images/hearthempty.svg","images/expandicon.svg","images/close.svg","images/warning.svg","images/logo.png","components/Logic/AppReducer.js","components/Logic/GlobalState.js","components/AddIngredent/AddIngredent.js","components/IngredentsList/Ingredent.js","components/IngredentsList/IngredentList.js","components/Favorite/FavoriteRecipe.js","components/missingIngredients/MissingIngredent.js","components/missingIngredients/MissingIngredientsList.js","components/Recipe/RecipeContent/RecipeContent.js","components/Error/Error.js","components/Recipe/Recipecard/Recipe.js","components/Recipe/RecipeList.js","components/UI/LeftContainer/Content.js","components/Main.js","App.js","index.js"],"names":["module","exports","state","action","type","ingredients","filter","ingredient","id","payload","favorite","initialState","JSON","parse","localStorage","getItem","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","deleteIngredient","addIngredient","addFavorite","deleteFavorite","AddIngredent","useState","setValue","suggestions","setSuggestion","useContext","getSuggestions","escapedValue","trim","replace","regex","RegExp","topIngredients","sort","a","b","name","length","test","inputProps","placeholder","onChange","e","newValue","preventDefault","className","slice","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","query","matches","isHighlighted","match","parts","map","part","index","highlight","key","String","text","onSuggestionSelected","suggestionValue","newIngredient","Math","floor","random","Ingredient","props","onClick","IngredentList","FavoriteRecepie","title","src","missedFood","fave","setFave","some","newFavorite","missedIngredients","hearthFull","hearthEmpty","alt","MissingIngredent","ingredientAdded","addMissingIngredient","MissingIngredientsList","missingIngredients","RecipeContent","recipeData","missingFoodIngredients","image","sourceUrl","creditsText","extendedIngredients","analyzedInstructions","href","target","rel","original","steps","step","number","Error","Recipe","recipeCardContent","loading","setLoading","error","setError","open","setOpen","recipe","setRecipe","openPopUp","axios","get","process","results","data","missingIngredient","Col","lg","expandIcon","warningIcon","closeOnDocumentClick","onClose","closeIcon","RecipeList","favoriteItemsList","recipeListItems","recepies","favoriteRecipes","fetchRecepies","Object","values","placeHolder","i","push","Content","api_call","message","logo","disabled","Main","setFavoriteRecipes","setMessage","ingredientsFetch","join","fetchItems","Axios","favoriteIds","filteredRecipes","includes","Container","fluid","Row","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb1769b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hearthfull.53af0b3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/hearthempty.dfcfef49.svg\";","module.exports = __webpack_public_path__ + \"static/media/expandicon.e5bb08d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.2f856b13.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.5bc3c5bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.6aaeca0c.png\";","export default (state, action) => {\r\n    switch (action.type) {\r\n      case 'DELETE_INGREDIENT':\r\n        return {\r\n          ...state,\r\n          ingredients: state.ingredients.filter(\r\n            (ingredient) => {\r\n           return  ingredient.id !== action.payload\r\n            }\r\n          ),\r\n        };\r\n      case 'ADD_INGREDIENT':\r\n        return {\r\n          ...state,\r\n          ingredients: [...state.ingredients, action.payload],\r\n        };\r\n        case 'ADD_FAVORITE':\r\n        return {\r\n          ...state,\r\n\r\n          favorite: [...state.favorite, action.payload],\r\n        };\r\n        case 'DELETE_FAVORITE':\r\n        return {\r\n          ...state,\r\n          favorite: state.favorite.filter(\r\n            (favorite) => {\r\n           return  favorite.id !== action.payload\r\n            }\r\n          ),\r\n        };\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  };","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  ingredients: JSON.parse(localStorage.getItem('ingredients')) || [],\r\n  favorite:JSON.parse(localStorage.getItem('favorite')) || []\r\n\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('ingredients', JSON.stringify(state.ingredients));\r\n    localStorage.setItem('favorite', JSON.stringify(state.favorite))\r\n  }, [state.ingredients,state.favorite]);\r\n\r\n  // Actions\r\n  function deleteIngredient(id) {\r\n    dispatch({\r\n      type: 'DELETE_INGREDIENT',\r\n      payload: id,\r\n    });\r\n  }\r\n  function addIngredient(ingredient) {\r\n    dispatch({\r\n      type: 'ADD_INGREDIENT',\r\n      payload: ingredient,\r\n    });\r\n  }\r\n  function addFavorite(favorite) {\r\n    dispatch({\r\n      type: 'ADD_FAVORITE',\r\n      payload: favorite,\r\n    });\r\n  }\r\n  function deleteFavorite(id) {\r\n    dispatch({\r\n      type: 'DELETE_FAVORITE',\r\n      payload: id,\r\n    });\r\n  }\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        ingredients: state.ingredients,\r\n        favorite: state.favorite,\r\n        deleteIngredient,\r\n        addIngredient,\r\n        addFavorite,\r\n        deleteFavorite,\r\n\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};","import React,{useState,useContext} from 'react'\r\nimport Autosuggest from 'react-autosuggest';\r\nimport topIngredients from '../../topIngredients.json';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport './AddIngredent.scss';\r\nimport {GlobalContext} from '../Logic/GlobalState';\r\n\r\nconst AddIngredent = () => {\r\n  const [value, setValue] = useState('');\r\n  const [suggestions, setSuggestion] = useState([]);\r\n  const { addIngredient } = useContext(GlobalContext);\r\n\r\n  const onChange = (e, { newValue }) => {\r\n    e.preventDefault();\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestion(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestion([]);\r\n  };\r\n\r\n  const escapeRegexCharacters = str => {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  };\r\n\r\n  const getSuggestions = value => {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp(escapedValue, 'i');\r\n\r\n    const sortedByLength = topIngredients.sort((a, b) => {\r\n      return a.name.length - b.name.length;\r\n    });\r\n\r\n    return sortedByLength.filter(ingredient => regex.test(ingredient.name));\r\n  };\r\n\r\n  const onSuggestionSelected = (e, { suggestionValue }) => {\r\n    const newIngredient = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      value: suggestionValue\r\n    };\r\n    addIngredient(newIngredient);\r\n    setValue('');\r\n  };\r\n\r\n  const getSuggestionValue = suggestion => suggestion.name;\r\n\r\n  const renderSuggestion = (suggestion, { query, isHighlighted }) => {\r\n    const matches = match(suggestion.name, query);\r\n    const parts = parse(suggestion.name, matches);\r\n    return (\r\n      <div>\r\n        {parts.map((part, index) => {\r\n          return part.highlight ? (\r\n            <span key={String(index)} className=\"text-gray-900 font-normal\">\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} className=\"text-gray-600 font-normal\">\r\n              {part.text}\r\n            </strong>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: 'Ex: apples',\r\n    value,\r\n    onChange\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <div className=\"input-container\">\r\n        <Autosuggest\r\n          suggestions={suggestions.slice(0, 5)}\r\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={inputProps}\r\n          onSuggestionSelected={onSuggestionSelected}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddIngredent\r\n","import React, { useContext } from 'react'\r\nimport {GlobalContext} from '../Logic/GlobalState';\r\nimport './Ingredent.scss';\r\nconst Ingredient = (props) => {\r\n    const {deleteIngredient}=useContext(GlobalContext);\r\n    return (\r\n        <li className=\"ingredent\" onClick={()=>deleteIngredient(props.ingredient.id)}>\r\n            {props.ingredient.value}\r\n            <span className=\"icon\">x</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Ingredient\r\n","import React, {useContext}from 'react'\r\nimport {GlobalContext} from '../Logic/GlobalState';\r\nimport Ingredient from './Ingredent';\r\nimport './IngredentList.scss';\r\nconst IngredentList = () => {\r\n    const {ingredients}=useContext(GlobalContext);\r\n    return (\r\n        <div className=\"list-container\">\r\n            <ul className=\"ingredent-list\">\r\n            {ingredients.map((ingredient)=>(\r\n                     <Ingredient key={ingredient.id} ingredient={ingredient}></Ingredient>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredentList\r\n","import React,{ useContext, useEffect, useState,} from 'react'\r\nimport {GlobalContext} from '../Logic/GlobalState';\r\nimport hearthFull from '../../images/hearthfull.svg';\r\nimport hearthEmpty from '../../images/hearthempty.svg';\r\nimport './FavoriteRecipe.scss';\r\nconst FavoriteRecepie = ({id,title,src,missedFood}) => {\r\n    const [fave,setFave]=useState(false);\r\n    const {favorite,deleteFavorite,addFavorite}=useContext(GlobalContext);\r\n    \r\n    useEffect(()=>{\r\n        if(!favorite.some(favorite=>favorite.id===id)){\r\n            setFave(false);\r\n        }else{\r\n            setFave(true);\r\n        }\r\n    },[favorite,id]);\r\n\r\n    const addToFavorites=()=>{\r\n        const newFavorite={\r\n            id,\r\n            title,\r\n            src,\r\n            missedIngredients: missedFood\r\n        };\r\n        if(!favorite.some(favorite=>favorite.id===id)){\r\n            addFavorite(newFavorite);\r\n        }else{\r\n            deleteFavorite(id);\r\n        }\r\n    } \r\n    return (\r\n        <>\r\n            <img  onClick={addToFavorites} src={fave?hearthFull:hearthEmpty} className=\"favorite\" alt=\"hearth\"></img>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FavoriteRecepie\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../Logic/GlobalState';\r\nconst MissingIngredent = ({ingredient}) => {\r\n    const {addIngredient,ingredients}=useContext(GlobalContext);\r\n\r\n    const addMissingIngredient=(ingredient)=>{\r\n        const newIngredient={\r\n            id:Math.floor(Math.random()*10000),\r\n            value:ingredient\r\n        };\r\n        addIngredient(newIngredient);\r\n    }\r\n    const ingredientAdded=ingredients.filter(newIngredient=>{\r\n        return ingredient===newIngredient.value;\r\n    });\r\n    return (\r\n        <>\r\n            {!ingredientAdded.length?(\r\n                <div className=\"missingIngredient\" onClick={()=>addMissingIngredient(ingredient)}>\r\n                    {ingredient}\r\n                    <div className=\"add-ingredient\">\r\n                        <span >+</span>\r\n                    </div>\r\n                </div>\r\n            ):null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MissingIngredent\r\n","import React from 'react'\r\nimport MissingIngredient from './MissingIngredent';\r\nconst MissingIngredientsList = ({missingIngredients}) => {\r\n    return (\r\n        <>\r\n            {missingIngredients.map(ingredient=>{\r\n                return <MissingIngredient key={ingredient.id} ingredient={ingredient.name}></MissingIngredient>\r\n            })}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MissingIngredientsList\r\n","import React from 'react'\r\nimport './RecipeContent.scss';\r\nimport MissingIngredientsList from '../../missingIngredients/MissingIngredientsList';\r\nconst RecipeContent = ({recipeData,missingFoodIngredients}) => {\r\n    const{ image,title,sourceUrl,creditsText, extendedIngredients,analyzedInstructions}=recipeData;\r\n    return (\r\n        <>\r\n            <div className=\"img-container\">\r\n                <img src={image} alt={title}></img> \r\n            </div>\r\n            <div className=\"text-container\">\r\n                <h2>{title}</h2>\r\n                {creditsText?<p>From <a href={sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\">{creditsText}</a></p>:null} \r\n            </div>\r\n            <div className=\"ingredient-container\">\r\n                <h3>Ingredients</h3>\r\n                <ul>\r\n                    {extendedIngredients.map((ingredient,index)=>{\r\n                        return(\r\n                            <li className=\"ingredient-list\" key={index}>\r\n                                {ingredient.original}\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div className=\"missing-ingredients\">\r\n                    {missingFoodIngredients.length?(\r\n                        <>\r\n                            <h3>Missing Ingredient</h3>\r\n                                <p>\r\n                                \r\n                                <MissingIngredientsList missingIngredients={missingFoodIngredients}></MissingIngredientsList>\r\n                                </p>\r\n                        </>\r\n                    ):null}\r\n            </div>\r\n            <div className=\"instruction-container\">\r\n                {analyzedInstructions.length>0?(\r\n                    <>\r\n                        <h3>Instructions</h3>\r\n                        <ul>\r\n                            {analyzedInstructions[0].steps.map((step,index)=>{\r\n                                return(\r\n                                    <li key={index}>\r\n                                        <div className=\"circle\">\r\n                                            <span >{step.number}</span>\r\n                                        </div>\r\n                                        <span className=\"text\">{step.step}</span>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </>\r\n                ):(\r\n                    <a href={sourceUrl} target=\"blank\" className=\"btn-fetch\">Click for Instructions</a>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeContent\r\n","import React from 'react'\r\nimport './Error.scss';\r\nconst Error = () => {\r\n    return (\r\n        <p className=\"text-center\">There appears to be an issue fetching this recipe. Please check out another recipe or try again later.</p>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useContext, useState } from 'react'\r\nimport './Recipe.scss';\r\nimport {Col} from 'react-bootstrap';\r\nimport { GlobalContext } from '../../Logic/GlobalState';\r\nimport Hearth from '../../Favorite/FavoriteRecipe';\r\nimport expandIcon from '../../../images/expandicon.svg';\r\nimport closeIcon from '../../../images/close.svg';\r\nimport Popup from 'reactjs-popup';\r\nimport axios from 'axios';\r\nimport RecipeContent from '../RecipeContent/RecipeContent';\r\nimport warningIcon from '../../../images/warning.svg';\r\nimport Error from '../../Error/Error';\r\nconst Recipe = ({src,id,title,missingFoodIngredients}) => {\r\n    const {ingredients}=useContext(GlobalContext);\r\n    const [loading,setLoading]=useState(false);\r\n    const [error,setError]=useState(false);\r\n    const [open,setOpen]=useState(false);\r\n    const [recipe,setRecipe]=useState({});\r\n\r\n    const openPopUp= async() =>{\r\n        setLoading(true);\r\n        setOpen(true);\r\n        setError(false);\r\n        try{\r\n            const results=await axios.get(`https://api.spoonacular.com/recipes/${id}/information?includeNutrition=false&apiKey=${process.env.REACT_APP_UNSPLASH_KEY}`);\r\n            setRecipe(results.data);\r\n            setLoading(false);\r\n        }\r\n        catch(error){\r\n            setError(true);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const ingredientAdded=missingFoodIngredients.filter(missingIngredient=>{\r\n        return(\r\n            ingredients.filter(ingredient=>{\r\n                return ingredient.value===missingIngredient.name;\r\n            }).length===0\r\n        );\r\n    });\r\n    let recipeCardContent;\r\n    if(loading){\r\n        recipeCardContent=<div></div>\r\n    }else if(error){\r\n        recipeCardContent=<Error></Error>\r\n    }else{\r\n        recipeCardContent=(\r\n            <RecipeContent recipeData={recipe} missingFoodIngredients={ingredientAdded}></RecipeContent>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Col lg=\"4\">\r\n                <div className=\"recipeCard\">\r\n                    <div className=\"hearth-container\">\r\n                        <Hearth src={src} id={id} title={title} missedFood={missingFoodIngredients}></Hearth>\r\n                    </div>\r\n                    <div className=\"img-container\">\r\n                        <img src={src} alt={`Recipe number-${id}` }></img>\r\n                        \r\n                        <div className=\"popup\" onClick={openPopUp}>\r\n                            <img src={expandIcon} alt=\"expand icon\"></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"title-container\">\r\n                        <h5 className=\"text-center\">{title}</h5>\r\n                        {ingredientAdded.length?(\r\n                                 <>\r\n                                    <div>\r\n                                        <img src={warningIcon} className=\"img\" alt=\"warning icon\"></img>\r\n                                        <p className=\"text-center\">missing {ingredientAdded.length} ingredient{ingredientAdded.length === 1 ? null:'s'}</p>\r\n                                    </div>\r\n                                    </>\r\n                                ):null}\r\n                            \r\n                            \r\n\r\n                        </div>\r\n                </div>\r\n            </Col>\r\n            <Popup open={open} closeOnDocumentClick  onClose={()=>setOpen(false)}>\r\n                <div className=\"hearth-container\">\r\n                    <Hearth id={id} title={title} src={src}></Hearth>\r\n                </div>\r\n                <div className=\"close-container\">\r\n                    <div className=\"popup\" onClick={()=>setOpen(false)}>\r\n                        <img src={closeIcon}  alt=\"close icon\"></img>\r\n                    </div>\r\n                </div>\r\n             \r\n                {recipeCardContent}\r\n            </Popup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React, { Fragment } from 'react'\r\nimport Recipe from './Recipecard/Recipe';\r\nimport './RecipeList.scss';\r\nconst RecipeList = ({recepies,loading,favoriteRecipes}) => {\r\n    const fetchRecepies=Object.values(recepies);\r\n    let favoriteItemsList,recipeListItems;\r\n    if(loading){\r\n        favoriteItemsList=null;\r\n    }else if(favoriteRecipes.length>0){\r\n        favoriteItemsList=(\r\n            <Fragment>\r\n                {favoriteRecipes.map(recipe=>{\r\n                    return (\r\n                        <Recipe \r\n                            src={recipe.src}\r\n                            key={recipe.id}\r\n                            title={recipe.title}\r\n                            id={recipe.id}\r\n                            missingFoodIngredients={recipe.missedIngredients}\r\n                        ></Recipe>\r\n                        )\r\n                })}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    //dodati loading deo\r\n    if(loading || fetchRecepies===null){\r\n        let placeHolder=[];\r\n        for (let i=9;i<9;i++){\r\n            placeHolder.push(<div className=\"col-lg-4\"><div className=\"recipeCard\" key={i}></div></div>)\r\n        }\r\n       recipeListItems=<Fragment>{placeHolder}</Fragment>\r\n       return <p className=\"text-center\">Loading...</p>\r\n    }else if(fetchRecepies.length>0){\r\n        recipeListItems=(\r\n            <Fragment>\r\n                    {fetchRecepies.map((recipe)=>{\r\n                        return (\r\n                        <Recipe \r\n                            src={recipe.image}\r\n                            key={recipe.id}\r\n                            title={recipe.title}\r\n                            id={recipe.id}\r\n                            missingFoodIngredients={recipe.missedIngredients}\r\n                        ></Recipe>\r\n                        )\r\n                    })}\r\n             </Fragment>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {favoriteItemsList}\r\n            {recipeListItems}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeList\r\n","import React from 'react'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Addingredent from '../../AddIngredent/AddIngredent';\r\nimport IngredentList from '../../IngredentsList/IngredentList';\r\nimport RecipeList from '../../Recipe/RecipeList';\r\nimport './Content.scss';\r\nimport logo from '../../../images/logo.png';\r\nconst Content = ({api_call,loading,recepies,favoriteRecipes,message}) => {\r\n        return (\r\n        <>\r\n            <Col lg=\"5\" className=\"background\"> \r\n                    <div className=\"logo-container\">\r\n                        <img src={logo} alt=\"logo\"></img>\r\n                    </div>\r\n                    <div className=\"text-container\">\r\n                        <h4>Discover what you can make with what you got in your fridge or pantry</h4>\r\n                    </div>\r\n                    <Addingredent></Addingredent>\r\n                    <IngredentList></IngredentList>\r\n            </Col>\r\n            <Col lg=\"7\">\r\n                <div className=\"info-container\">\r\n                    <h2>Recipes</h2>\r\n                    <div className=\"btn-container\">\r\n                        <a onClick={api_call} disabled={loading} className=\"btn-fetch\">{loading?'Finding Recepes':'Find Recipes'}</a>\r\n                    </div>\r\n                </div>\r\n                <Col lg=\"12\">\r\n                    <p className=\"text\">{message}</p>\r\n                    <RecipeList\r\n                        recepies={recepies}\r\n                        loading={loading}\r\n                        favoriteRecipes={favoriteRecipes}\r\n                    ></RecipeList>\r\n                </Col>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content\r\n\r\n","import React, { useContext,useState } from 'react'\r\nimport Content from './UI/LeftContainer/Content';\r\nimport Axios from 'axios';\r\nimport {Container,Row} from 'react-bootstrap';\r\nimport {GlobalContext} from './Logic/GlobalState';\r\n\r\nconst Main = () => {\r\n    const {ingredients,favorite}=useContext(GlobalContext);\r\n    const [recipe,setRecipe]=useState([]);\r\n    const [error,setError]=useState(false);\r\n    const [loading,setLoading]=useState(false);\r\n    const [favoriteRecipes,setFavoriteRecipes]=useState(favorite||[]);\r\n    const [message,setMessage]=useState(favorite.length?'':'Add ingredients then click \"Find Recipes\". Try to add as many ingredients as you can for better results.')\r\n    \r\n    const mergedIngredients=ingredients.map((ingredient)=>{\r\n        return ingredient.value;\r\n    });\r\n    const ingredientsFetch=mergedIngredients.join(',+');\r\n\r\n    const fetchItems=async(e)=>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setMessage('');\r\n         try{\r\n            const recepies= await Axios.get(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredientsFetch}&number=5&apiKey=${process.env.REACT_APP_UNSPLASH_KEY}`);\r\n            setFavoriteRecipes(favorite);\r\n            const favoriteIds=favoriteRecipes.map(fave=>fave.id).join(', ');\r\n            const filteredRecipes=recepies.data.filter(recipe=>\r\n                !favoriteIds.includes(recipe.id)\r\n            );\r\n            setRecipe(filteredRecipes);\r\n            setLoading(false);\r\n        }\r\n        catch (error){\r\n            setError(true);\r\n            setMessage('Sorry, we have hit our limit for requests for the day. Please try again tomorrow.')\r\n        }\r\n    }    \r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Row>\r\n                <Content api_call={fetchItems} \r\n                loading={loading}\r\n                recepies={recipe}\r\n                favoriteRecipes={favoriteRecipes}\r\n                message={message}\r\n                ></Content>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport Main from './components/Main';\nimport './App.scss';\nimport { GlobalProvider } from './components/Logic/GlobalState';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"font-body lg:flex\">\n        <Main />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}